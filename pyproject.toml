[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "scdlbot"
version = "0.15.0"
description = "Telegram Bot for downloading MP3 rips of tracks/sets from SoundCloud, Bandcamp, YouTube with tags and artwork"
readme = "README.rst"
license = {text = "MIT"}
authors = [
    {name = "George Pchelkin", email = "george@pchelk.in"},
]
keywords = ["scdlbot", "telegram", "bot", "soundcloud", "bandcamp", "youtube", "mixcloud", "yandex", "audio", "music", "download"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Internet",
    "Operating System :: OS Independent",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.10"
dependencies = [
    # Core dependencies
    "python-telegram-bot==22.1",
    "requests[socks]>=2.32.3",
    "boltons>=25.0.0",
    "mutagen>=1.47.0",
    "plumbum>=1.9.0",
    "ffmpeg-python==0.2.0",
    "prometheus-client>=0.22.0",
    "sdnotify>=0.3.2",
    "fake-useragent>=2.1.0",
    "huey>=2.5.3",
    "pydantic>=2.0.0",
    # Additional dependencies from requirements.txt
    "aiolimiter>=1.2.1",
    "anyio>=4.9.0",
    "apscheduler>=3.11.0",
    "beautifulsoup4>=4.13.4",
    "certifi>=2025.7.14",
    "charset-normalizer>=3.4.2",
    "colorama>=0.4.6 ; sys_platform == 'win32'",
    "dacite>=1.9.2",
    "demjson3>=3.0.6",
    "docopt-ng>=0.9.0",
    "exceptiongroup>=1.3.0 ; python_version == '3.10'",
    "filelock>=3.16.1",
    "future>=1.0.0",
    "h11>=0.16.0",
    "h2>=4.2.0",
    "hpack>=4.1.0",
    "httpcore>=1.0.9",
    "httpx>=0.28.1",
    "hyperframe>=6.1.0",
    "idna>=3.10",
    "pathvalidate>=3.3.1",
    "pysocks>=1.7.1",
    "python-dateutil>=2.9.0.post0",
    "pywin32==311 ; sys_platform == 'win32' and platform_python_implementation != 'PyPy'",
    "six>=1.17.0",
    "sniffio>=1.3.1",
    "soundcloud-v2>=1.6.0",
    "soupsieve>=2.7",
    "termcolor>=3.1.0",
    "toml>=0.10.2 ; python_version == '3.10'",
    "tornado>=6.5.1",
    "tqdm>=4.67.1",
    "typing-extensions>=4.14.1",
    "tzdata>=2025.2 ; sys_platform == 'win32'",
    "tzlocal>=5.3.1",
    "unicode-slugify>=0.1.5",
    "unidecode>=1.4.0",
    "urllib3>=2.5.0",
    # Git dependencies
    "yt-dlp @ git+https://github.com/yt-dlp/yt-dlp.git@master",
    "scdl @ git+https://github.com/scdl-org/scdl.git@eb555d8993f55618d955cce6e78815b30a6c88ee",
    "bandcamp-downloader @ git+https://github.com/iheanyi/bandcamp-dl.git@a3fd56d2812c4694a91cb74088313202f0b4964d",
    "tomli>=2.2.1",
]

[project.optional-dependencies]
dev = [
    "isort>=6.0.0",
    "black>=25.1.0",
    "wemake-python-styleguide>=1.1.0",
    "doc8>=1.1",
    "nitpick>=0.35",
    "safety>=3.3.0",
]
docs = [
    "sphinx>=8.1.3",
    "sphinx-autodoc-typehints>=3.0.1",
    "myst-parser>=4.0.0",
    "tomli>=2.1",
    "recommonmark>=0.7",
    "typing-extensions>=4.9",
]

[project.urls]
Homepage = "https://github.com/gpchelkin/scdlbot"
Documentation = "https://scdlbot.readthedocs.io"
Repository = "https://github.com/gpchelkin/scdlbot"
Issues = "https://github.com/gpchelkin/scdlbot/issues"
Changelog = "https://github.com/gpchelkin/scdlbot/releases"

[project.scripts]
scdlbot = "scdlbot.__main__:main"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build]
include = [
    "AUTHORS.rst",
    "CONTRIBUTING.md",
    "CHANGELOG.rst",
    "LICENSE",
    "README.rst",
    "tests/*",
    "docs/*.rst",
    "docs/conf.py",
    "docs/Makefile",
    "docs/*.jpg",
    "docs/*.png",
    "docs/*.gif",
    "scdlbot/**",
    "scdlbot/texts/*",
]

[tool.isort]
# isort configuration:
# https://pycqa.github.io/isort/docs/configuration/options.html
# https://pycqa.github.io/isort/docs/configuration/profiles.html
# https://pycqa.github.io/isort/docs/configuration/multi_line_output_modes.html#3-vertical-hanging-indent
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true
# match flake8 max-line-length:
line_length = 180

[tool.black]
# match flake8 max-line-length:
line-length = 180

[tool.nitpick]
style = "https://raw.githubusercontent.com/wemake-services/wemake-python-styleguide/master/styles/nitpick-style-wemake.toml"

[tool.flakeheaven]
# TODO flakeheaven
# https://github.com/flakeheaven/flakeheaven
# https://wemake-python-styleguide.readthedocs.io/en/latest/pages/usage/integrations/flakehell.html
# https://github.com/wemake-services/wemake-python-styleguide/blob/master/styles/flakehell.toml
format = "grouped"
show_source = true
statistics = false
doctests = true
enable_extensions = "G"
accept_encodings = "utf-8"
max_complexity = 6
max_line_length = 180
ignore = "D100, D104, D401, W504, RST303, RST304, DAR103, DAR203"
# poetry run flakeheaven baseline > .flakeheaven_baseline
baseline = ".flakeheaven_baseline"
[tool.flakeheaven.plugins]
"flake8-*" = ["+*"]
mccabe = ["+*"]
nitpick = ["+*"]
"pep8-naming" = ["+*"]
pycodestyle = ["+*"]
pyflakes = ["+*"]
"wemake-python-styleguide" = ["+*"]

[tool.tox]
# TODO https://github.com/python-poetry/poetry/blob/master/docs/faq.md#is-tox-supported
legacy_tox_ini = """
[tox]
skipsdist = true
envlist = py39, py310, py311

[gh-actions]
#tox-gh-actions: run tox only on envs which match github actions workflow python version (one env per job)
python =
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313

[testenv]
allowlist_externals =
    make
    poetry
# either use command 'poetry install',
# or use tox-poetry - it will install main and dev deps to venv with poetry
commands =
    poetry install --with main,dev --verbose
    make test
"""

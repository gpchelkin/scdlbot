[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.nitpick]
style = "https://raw.githubusercontent.com/wemake-services/wemake-python-styleguide/master/styles/nitpick-style-wemake.toml"


[tool.poetry]
name = "scdlbot"
description = "Telegram Bot for downloading MP3 rips of tracks/sets from SoundCloud, Bandcamp, YouTube with tags and artwork"
version = "0.13.7"
license = "MIT"

authors = ["George Pchelkin <george@pchelk.in>"]

readme = "README.rst"

repository = "https://github.com/gpchelkin/scdlbot"
homepage = "https://github.com/gpchelkin/scdlbot"
documentation = "https://scdlbot.readthedocs.io"

keywords = ["scdlbot", "telegram", "bot", "soundcloud", "bandcamp", "youtube", "mixcloud", "yandex", "audio", "music", "download"]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Internet",
    "Operating System :: OS Independent",
    "Natural Language :: English",
]

include = ["AUTHORS.rst", "CONTRIBUTING.md", "CHANGELOG.rst", "LICENSE", "README.rst", "tests/*", "docs/*.rst", "docs/conf.py", "docs/Makefile", "docs/*.jpg", "docs/*.png", "docs/*.gif", "scdlbot/texts/*"]

[tool.poetry.scripts]
scdlbot = "scdlbot.__main__:main"

[tool.poetry.dependencies]
python = "^3.6.9"

# Docs, optional, use `poetry install -E docs` to install them:
sphinx = { version = "^5.0",  optional = true }
sphinx-autodoc-typehints = { version = "^1.12", optional = true }
recommonmark = { version = "^0.7", optional = true }
m2r2 = { version = "^0.3",  optional = true }
tomlkit = { version = "^0.11", optional = true }
typing-extensions = { version = "^4.1", optional = true }

# Requirements of project's code:
#python-telegram-bot = "13.11"
python-telegram-bot = "12.8"
python-telegram-handler = "2.2.1"
boltons = "21.0.0"
plumbum = "1.7.2"
ffmpeg-python = "0.2.0"
mutagen = "1.45.1"
patool = "1.12"
requests = "^2.26.0"
prometheus_client = "^0.14.0"
#celery = "^5.2.6"
#pyshorteners = "1.0.1"
#transliterate = "1.10.2"

### For publishing to PyPI:
#yt-dlp = "2022.4.8"
#youtube_dl = "2021.12.17"
#youtube-dlc = "2020.11.11.post3"
#scdl = "2.7.1"
#bandcamp-downloader = "0.0.12"

### For making it really work:
# https://github.com/ytdl-org/youtube-dl/pull/26684
#youtube_dl = { git = "https://github.com/l1ving/youtube-dl.git" }
#youtube_dl = { git = "https://github.com/gilou/youtube-dl.git", branch = "bandcamp_update" }
#youtube_dl = { git = "https://github.com/gpchelkin/youtube-dl.git", branch = "bandcamp_update" }
#youtube-dlc = { git = "https://github.com/blackjack4494/yt-dlc.git", branch = "master" }
#yt-dlp = { git = "https://github.com/yt-dlp/yt-dlp.git", branch = "master" }
yt-dlp = { git = "https://github.com/pritam20ps05/yt-dlp.git", branch = "instagram_fix" }
scdl = { git = "https://github.com/flyingrub/scdl.git", branch = "master" }
#scdl = { git = "https://github.com/gpchelkin/scdl.git", branch = "add_permalink_url_to_filename" }
#scdl = { git = "https://github.com/def-hash/scdl.git", branch = "user-agent-fix" }
#scdl = { git = "https://github.com/7x11x13/scdl.git", branch = "master" }
bandcamp-downloader = { git = "https://github.com/iheanyi/bandcamp-dl.git", branch = "master" }
#bandcamp-downloader = { git = "https://github.com/gpchelkin/bandcamp-dl.git", branch = "demjson3" }

#fake-useragent = { git = "https://github.com/Jordan9675/fake-useragent.git", branch = "master" }

[tool.poetry.dev-dependencies]
mypy = "^0.961"

wemake-python-styleguide = "^0.16"
flake8-pytest = "^1.3"
flake8-pytest-style = "^1.6.0"
doc8 = "^0.11"
nitpick = "^0.30.0"

safety = "^2.1.0"

pytest = "^7.0.1"
pytest-cov = "^3.0"
pytest-randomly = "^3.10"

tox = "^3.25"

[tool.poetry.extras]
docs = ["sphinx", "sphinx-autodoc-typehints", "recommonmark", "m2r2", "tomlkit", "typing-extensions"]

[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "setuppy", path = "setup.py"}
